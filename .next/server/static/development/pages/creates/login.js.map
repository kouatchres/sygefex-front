{"version":3,"file":"static\\development\\pages\\creates\\login.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/creates/login.jsx","webpack:///./src/components/ErrorMessage.js","webpack:///./src/components/queries&Mutations&Functions/Mutations.jsx","webpack:///./src/components/styles/StyledPage.jsx","webpack:///./src/components/user/Login.jsx","webpack:///./src/components/utils/FormInputs.jsx","webpack:///external \"@apollo/react-hooks\"","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"formik\"","webpack:///external \"graphql-tag\"","webpack:///external \"next/link\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-select\"","webpack:///external \"styled-components\"","webpack:///external \"yup\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React from \"react\";\r\nimport Login from \"../../src/components/user/Login\";\r\n\r\nconst login = () => {\r\n  return (\r\n    <div>\r\n      <Login />\r\n    </div>\r\n  );\r\n};\r\nexport default login;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ErrorStyles = styled.div`\r\n  padding: 0.5rem;\r\n  background: ${props => props.theme.grey[2]};\r\n  margin:0 1.1rem ;\r\n  border-radius: 0.5rem;\r\n  border: 0.04rem solid rgba(0, 0, 0, 0.05);\r\n  /* border-right: 0.08rem solid red; */\r\n  border-left: 0.05rem solid red;\r\n  p {\r\n    margin: 0;\r\n    font-size:1.2rem;\r\n    font-weight: normal;\r\n  }\r\n  strong {\r\n    font-size:1.6rem;\r\n    font-weight: normal;\r\n    margin-right: 0.15rem;\r\n  }\r\n`;\r\n\r\nconst DisplayError = ({ error }) => {\r\n  if (!error || !error.message) return null;\r\n  if (error.networkError && error.networkError.result && error.networkError.result.errors.length) {\r\n    return error.networkError.result.errors.map((error, i) => (\r\n      <ErrorStyles key={i}>\r\n        <p >\r\n          <strong>Erreure r√©seaux!</strong>\r\n          {error.message.replace(\"Network error: \", \"\")}\r\n        </p>\r\n      </ErrorStyles>\r\n    ));\r\n  }\r\n  return (\r\n    <ErrorStyles  >\r\n      <p >\r\n        <strong>Erreure !</strong>\r\n        {error.message.replace(\"GraphQL error: \", \"\")}\r\n\r\n      </p>\r\n    </ErrorStyles>\r\n  );\r\n};\r\n\r\nDisplayError.defaultProps = {\r\n  error: {}\r\n};\r\n\r\nDisplayError.propTypes = {\r\n  error: PropTypes.object\r\n};\r\n\r\nexport default DisplayError;\r\n","import gql from \"graphql-tag\";\r\n\r\n//************create mutations  */\r\nconst signInCandidate = gql`\r\n  mutation signInCandidate($candCode: String!) {\r\n    candidateSignIn(candCode: $candCode) {\r\n      id\r\n      cand1stName\r\n    }\r\n  }\r\n`;\r\n//\r\nconst signoutMutation = gql`\r\n  mutation signoutMutation {\r\n    signout {\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst deleteReportMutation = gql`\r\n  mutation deleteReportMutation($id: ID!) {\r\n    deleteReport(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateSessionMutation = gql`\r\n  mutation updateSessionMutation(\r\n    $id: ID!\r\n    $sessionName: String\r\n    $sessionCode: String\r\n  ) {\r\n    updateSession(\r\n      id: $id\r\n      sessionName: $sessionName\r\n      sessionCode: $sessionCode\r\n    ) {\r\n      sessionName\r\n      sessionCode\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateEducationTypeMutation = gql`\r\n  mutation updateEducationTypeMutation(\r\n    $id: ID!\r\n    $educationTypeName: String\r\n    $educationTypeCode: String\r\n  ) {\r\n    updateEducationType(\r\n      id: $id\r\n      educationTypeName: $educationTypeName\r\n      educationTypeCode: $educationTypeCode\r\n    ) {\r\n      id\r\n      educationTypeName\r\n      educationTypeCode\r\n    }\r\n  }\r\n`;\r\nconst updateSubjectMutation = gql`\r\n  mutation updateSubjectMutation(\r\n    $id: ID!\r\n    $subjectName: String\r\n    $subjectCode: String\r\n  ) {\r\n    updateSubject(\r\n      id: $id\r\n      subjectName: $subjectName\r\n      subjectCode: $subjectCode\r\n    ) {\r\n      subjectName\r\n      subjectCode\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateRankMutation = gql`\r\n  mutation updateRankMutation($id: ID!, $rankName: String, $rankCode: String) {\r\n    updateRank(id: $id, rankName: $rankName, rankCode: $rankCode) {\r\n      id\r\n      rankName\r\n      rankCode\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateSpecialtyMutation = gql`\r\n  mutation updateSpecialtyMutation(\r\n    $id: ID!\r\n    $specialtyName: String\r\n    $specialtyCode: String\r\n  ) {\r\n    updateSpecialty(\r\n      id: $id\r\n      specialtyName: $specialtyName\r\n      specialtyCode: $specialtyCode\r\n    ) {\r\n      specialtyName\r\n      specialtyCode\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateDivisionMutation = gql`\r\n  mutation updateDivisionMutation(\r\n    $id: ID!\r\n    $divName: String\r\n    $divCode: String\r\n  ) {\r\n    updateDivision(id: $id, divName: $divName, divCode: $divCode) {\r\n      id\r\n      divName\r\n      divCode\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateRegionMutation = gql`\r\n  mutation updateRegionMutation($id: ID!, $regName: String, $regCode: String) {\r\n    updateRegion(id: $id, regName: $regName, regCode: $regCode) {\r\n      id\r\n      regName\r\n      regCode\r\n    }\r\n  }\r\n`;\r\n\r\nconst createNewReportMutation = gql`\r\n  mutation createNewReportMutation(\r\n    $reportImage: String!\r\n    $reportName: String!\r\n    $centerExamSessionExaminer: CenterExamSessionExaminerWhereUniqueInput!\r\n  ) {\r\n    createReport(\r\n      reportImage: $reportImage\r\n      reportName: $reportName\r\n      centerExamSessionExaminer: $centerExamSessionExaminer\r\n    ) {\r\n      id\r\n      reportName\r\n      reportImage\r\n    }\r\n  }\r\n`;\r\n\r\nconst createRegistrationMutation = gql`\r\n  mutation createRegistrationMutation(\r\n    $candidate: CandidateWhereUniqueInput!\r\n    $candExamSecretCode: String!\r\n    $candExamSession: String!\r\n    $candRegistrationNumber: String!\r\n    $centerExamSession: CenterExamSessionWhereUniqueInput!\r\n    $centerExamSessionSpecialty: CenterExamSessionSpecialtyWhereUniqueInput!\r\n    $specialty: SpecialtyWhereUniqueInput!\r\n    $aptitude: String!\r\n    $EPF1: String!\r\n    $EPF2: String!\r\n  ) {\r\n    createRegistration(\r\n      candidate: $candidate\r\n      candExamSecretCode: $candExamSecretCode\r\n      candExamSession: $candExamSession\r\n      candRegistrationNumber: $candRegistrationNumber\r\n      centerExamSession: $centerExamSession\r\n      centerExamSessionSpecialty: $centerExamSessionSpecialty\r\n      specialty: $specialty\r\n      EPF1: $EPF1\r\n      EPF2: $EPF2\r\n      aptitude: $aptitude\r\n    ) {\r\n      id\r\n      centerExamSession {\r\n        id\r\n        center {\r\n          id\r\n          centerName\r\n        }\r\n      }\r\n      candidate {\r\n        id\r\n        cand1stName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst createCenterExamSessionMutation = gql`\r\n  mutation createCenterExamSessionMutation(\r\n    $examSession: ExamSessionWhereUniqueInput!\r\n    $center: CenterWhereUniqueInput!\r\n    $CESCode: String!\r\n  ) {\r\n    createCenterExamSession(\r\n      examSession: $examSession\r\n      center: $center\r\n      CESCode: $CESCode\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst createPhaseRankMutation = gql`\r\n  mutation createPhaseRankMutation(\r\n    $phase: PhaseWhereUniqueInput!\r\n    $rank: RankWhereUniqueInput!\r\n  ) {\r\n    createPhaseRank(phase: $phase, rank: $rank) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst createCenterExamSessionExaminerMutation = gql`\r\n  mutation createCenterExamSessionExaminerMutation(\r\n    $centerExamSession: CenterExamSessionWhereUniqueInput!\r\n    $examiner: ExaminerWhereUniqueInput!\r\n    $phaseRank: PhaseRankWhereUniqueInput!\r\n  ) {\r\n    createCenterExamSessionExaminer(\r\n      phaseRank: $phaseRank\r\n      centerExamSession: $centerExamSession\r\n      examiner: $examiner\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst createCenterExamSessionSpecialtyMutation = gql`\r\n  mutation createCenterExamSessionSpecialtyMutation(\r\n    $specialty: SpecialtyWhereUniqueInput!\r\n    $centerExamSession: CenterExamSessionWhereUniqueInput!\r\n  ) {\r\n    createCenterExamSessionSpecialty(\r\n      specialty: $specialty\r\n      centerExamSession: $centerExamSession\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst createDivisionMutation = gql`\r\n  mutation createDivisionMutation(\r\n    $divName: String!\r\n    $divCode: String!\r\n    $region: RegionWhereUniqueInput!\r\n  ) {\r\n    createDivision(divName: $divName, divCode: $divCode, region: $region) {\r\n      id\r\n      divName\r\n    }\r\n  }\r\n`;\r\n\r\nconst createCenterMutation = gql`\r\n  mutation createCenterMutation(\r\n    $centerName: String!\r\n    $centerNumber: Int\r\n    $centerCode: String!\r\n    $centerSecretCode: String!\r\n    $town: TownWhereUniqueInput!\r\n  ) {\r\n    createCenter(\r\n      centerSecretCode: $centerSecretCode\r\n      centerName: $centerName\r\n      centerNumber: $centerNumber\r\n      centerCode: $centerCode\r\n      town: $town\r\n    ) {\r\n      id\r\n      centerName\r\n      centerSecretCode\r\n      centerCode\r\n      town {\r\n        townName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst createSpecialtyMutation = gql`\r\n  mutation createSpecialtyMutation(\r\n    $specialtyName: String!\r\n    $specialtyCode: String!\r\n    $educationType: EducationTypeWhereUniqueInput!\r\n  ) {\r\n    createSpecialty(\r\n      specialtyName: $specialtyName\r\n      specialtyCode: $specialtyCode\r\n      educationType: $educationType\r\n    ) {\r\n      id\r\n      specialtyName\r\n    }\r\n  }\r\n`;\r\nconst createEducationTypeMutation = gql`\r\n  mutation createEducationTypeMutation(\r\n    $educationTypeName: String!\r\n    $educationTypeCode: String!\r\n  ) {\r\n    createEducationType(\r\n      educationTypeName: $educationTypeName\r\n      educationTypeCode: $educationTypeCode\r\n    ) {\r\n      id\r\n      educationTypeName\r\n    }\r\n  }\r\n`;\r\n\r\nconst createTownMutation = gql`\r\n  mutation createTownMutation(\r\n    $townName: String!\r\n    $townCode: String!\r\n    $subDiv: SubDivisionWhereUniqueInput!\r\n  ) {\r\n    createTown(townName: $townName, townCode: $townCode, subDiv: $subDiv) {\r\n      id\r\n      townName\r\n      townCode\r\n      subDiv {\r\n        subDivName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst createNewSubjectMutation = gql`\r\n  mutation createNewSubjectMutation(\r\n    $subjectName: String!\r\n    $subjectCode: String!\r\n    $subjectType: String!\r\n    $subjectGroup: String!\r\n    $educType: EducationTypeWhereUniqueInput!\r\n  ) {\r\n    createSubject(\r\n      subjectName: $subjectName\r\n      educType: $educType\r\n      subjectCode: $subjectCode\r\n      subjectType: $subjectType\r\n      subjectGroup: $subjectGroup\r\n    ) {\r\n      subjectCode\r\n      subjectName\r\n      subjectType\r\n      subjectGroup\r\n    }\r\n  }\r\n`;\r\n\r\nconst createSubDivisionMutation = gql`\r\n  mutation createSubDivisionMutation(\r\n    $subDivName: String!\r\n    $subDivCode: String!\r\n    $division: DivisionWhereUniqueInput!\r\n  ) {\r\n    createSubDivision(\r\n      subDivName: $subDivName\r\n      subDivCode: $subDivCode\r\n      division: $division\r\n    ) {\r\n      id\r\n      subDivName\r\n      subDivCode\r\n      division {\r\n        divName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst createNewSessionMutation = gql`\r\n  mutation createNewSessionMutation(\r\n    $sessionName: String!\r\n    $sessionCode: String!\r\n  ) {\r\n    createSession(sessionName: $sessionName, sessionCode: $sessionCode) {\r\n      id\r\n      sessionName\r\n    }\r\n  }\r\n`;\r\n\r\nconst createNewRankMutation = gql`\r\n  mutation createNewRankMutation($rankName: String!, $rankCode: String!) {\r\n    createRank(rankName: $rankName, rankCode: $rankCode) {\r\n      id\r\n      rankName\r\n    }\r\n  }\r\n`;\r\n\r\nconst createNewRegionMutation = gql`\r\n  mutation createNewRegionMutation($regName: String!, $regCode: String!) {\r\n    createRegion(regName: $regName, regCode: $regCode) {\r\n      id\r\n      regName\r\n    }\r\n  }\r\n`;\r\n\r\nconst signupUserMutation = gql`\r\n  mutation signupUserMutation(\r\n    $name: String!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    signup(password: $password, name: $name, email: $email) {\r\n      id\r\n      name\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nconst loginUserMutation = gql`\r\n  mutation loginUserMutation($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      id\r\n      name\r\n      email\r\n      password\r\n      permissions\r\n    }\r\n  }\r\n`;\r\n\r\nconst requestResetMutation = gql`\r\n  mutation requestResetMutation($email: String!) {\r\n    requestReset(email: $email) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst createNewCountryMutation = gql`\r\n  mutation createNewCountryMutation(\r\n    $countryName: String!\r\n    $countryCode: String!\r\n  ) {\r\n    createCountry(countryName: $countryName, countryCode: $countryCode) {\r\n      id\r\n      countryName\r\n      countryCode\r\n    }\r\n  }\r\n`;\r\n\r\nconst createPhaseMutation = gql`\r\n  mutation createPhaseMutation($phaseName: String!, $phaseCode: String!) {\r\n    createPhase(phaseName: $phaseName, phaseCode: $phaseCode) {\r\n      id\r\n      phaseName\r\n    }\r\n  }\r\n`;\r\n\r\nconst createAttendanceMutation = gql`\r\n  mutation createAttendanceMutation(\r\n    $subjectSpecialty: SubjectSpecialtyWhereUniqueInput!\r\n    $centerExamSessionSpecialty: CenterExamSessionSpecialtyWhereUniqueInput!\r\n    $collected: String!\r\n    $candExamSecretCode: String!\r\n    $handin: String!\r\n  ) {\r\n    createAttendance(\r\n      subjectSpecialty: $subjectSpecialty\r\n      centerExamSessionSpecialty: $centerExamSessionSpecialty\r\n      collected: $collected\r\n      candExamSecretCode: $candExamSecretCode\r\n      handin: $handin\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst createExamMutation = gql`\r\n  mutation createExamMutation($examName: String!, $examCode: String!) {\r\n    createExam(examName: $examName, examCode: $examCode) {\r\n      id\r\n      examName\r\n    }\r\n  }\r\n`;\r\n\r\nconst registerSubjectSpecialtyMutation = gql`\r\n  mutation registerSubjectSpecialtyMutation(\r\n    $subject: SubjectWhereUniqueInput!\r\n    $specialty: SpecialtyWhereUniqueInput!\r\n    $coeff: Int!\r\n  ) {\r\n    createSubjectSpecialty(\r\n      subject: $subject\r\n      specialty: $specialty\r\n      coeff: $coeff\r\n    ) {\r\n      id\r\n      specialty {\r\n        id\r\n        specialtyName\r\n        subjectSpecialty {\r\n          id\r\n          subject {\r\n            id\r\n            subjectName\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst registerNewSubjectSpecialtyMutation = gql`\r\n  mutation registerNewSubjectSpecialtyMutation(\r\n    $specialty: SpecialtyWhereUniqueInput!\r\n    $subject: SubjectWhereUniqueInput!\r\n    $coeff: Int!\r\n  ) {\r\n    createSubjectSpecialty(\r\n      specialty: $specialty\r\n      subject: $subject\r\n      coeff: $coeff\r\n    ) {\r\n      id\r\n      specialty {\r\n        id\r\n        specialtyName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst createCandidateMutation = gql`\r\n  mutation createCandidateMutation(\r\n    $cand1stName: String!\r\n    $cand2ndName: String\r\n    $cand3rdName: String\r\n    $dadName: String\r\n    $momName: String\r\n    $candCode: String\r\n    $email: String!\r\n    $image: String!\r\n    $phoneNumb: Int\r\n    $dateOfBirth: DateTime\r\n    $birthCertNumber: String\r\n    $placeOfBirth: String\r\n    $gender: String!\r\n  ) {\r\n    createCandidate(\r\n      cand1stName: $cand1stName\r\n      cand2ndName: $cand2ndName\r\n      dadName: $dadName\r\n      momName: $momName\r\n      cand3rdName: $cand3rdName\r\n      candCode: $candCode\r\n      email: $email\r\n      image: $image\r\n      phoneNumb: $phoneNumb\r\n      dateOfBirth: $dateOfBirth\r\n      birthCertNumber: $birthCertNumber\r\n      placeOfBirth: $placeOfBirth\r\n      gender: $gender\r\n    ) {\r\n      id\r\n      cand1stName\r\n      cand2ndName\r\n      cand3rdName\r\n      momName\r\n      dadName\r\n      candCode\r\n      birthCertNumber\r\n      dateOfBirth\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\nconst createMultipleCandidatesMutation = gql`\r\n  mutation createMultipleCandidatesMutation(\r\n    $cand1stName: String!\r\n    $cand2ndName: String\r\n    $cand3rdName: String\r\n    $dadName: String\r\n    $momName: String\r\n    $candCode: String\r\n    $email: String!\r\n    $image: String!\r\n    $phoneNumb: Int\r\n    $dateOfBirth: DateTime\r\n    $birthCertNumber: String\r\n    $placeOfBirth: String\r\n    $gender: String!\r\n  ) {\r\n    createMultipleCandidates(\r\n      cand1stName: $cand1stName\r\n      cand2ndName: $cand2ndName\r\n      dadName: $dadName\r\n      momName: $momName\r\n      cand3rdName: $cand3rdName\r\n      candCode: $candCode\r\n      email: $email\r\n      image: $image\r\n      phoneNumb: $phoneNumb\r\n      dateOfBirth: $dateOfBirth\r\n      birthCertNumber: $birthCertNumber\r\n      placeOfBirth: $placeOfBirth\r\n      gender: $gender\r\n    ) {\r\n      id\r\n      cand1stName\r\n      cand2ndName\r\n      cand3rdName\r\n      momName\r\n      dadName\r\n      candCode\r\n      gender\r\n      birthCertNumber\r\n      dateOfBirth\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\nconst createExaminerMutation = gql`\r\n  mutation createExaminerMutation(\r\n    $examiner1stName: String!\r\n    $examiner2ndName: String!\r\n    $examinerOtherNames: String\r\n    $examinerCode: String!\r\n    $examinerEmail: String!\r\n    $examinerCNI: String!\r\n    $examinerMatricule: String!\r\n    $examinerImage: String!\r\n    $examinerPhone: Int!\r\n    $gender: String!\r\n  ) {\r\n    createExaminer(\r\n      examiner1stName: $examiner1stName\r\n      examiner2ndName: $examiner2ndName\r\n      examinerOtherNames: $examinerOtherNames\r\n      examinerMatricule: $examinerMatricule\r\n      examinerCode: $examinerCode\r\n      examinerCNI: $examinerCNI\r\n      examinerEmail: $examinerEmail\r\n      examinerImage: $examinerImage\r\n      examinerPhone: $examinerPhone\r\n      gender: $gender\r\n    ) {\r\n      id\r\n      examiner1stName\r\n      examiner2ndName\r\n      examinerOtherNames\r\n      examinerCode\r\n      examinerEmail\r\n      examinerImage\r\n      examinerPhone\r\n    }\r\n  }\r\n`;\r\n\r\n//************create mutations  */\r\n\r\n////**************Update mutations */\r\n\r\nconst updateSubDivisionMutation = gql`\r\n  mutation updateSubDivisionMutation(\r\n    $id: ID!\r\n    $subDivName: String\r\n    $subDivCode: String\r\n  ) {\r\n    updateSubDivision(\r\n      id: $id\r\n      subDivName: $subDivName\r\n      subDivCode: $subDivCode\r\n    ) {\r\n      subDivName\r\n      subDivCode\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateCenterMutation = gql`\r\n  mutation updateCenterMutation(\r\n    $id: ID!\r\n    $centerName: String\r\n    $centerCode: String\r\n    $centerNumber: Int\r\n  ) {\r\n    updateCenter(\r\n      id: $id\r\n      centerName: $centerName\r\n      centerCode: $centerCode\r\n      centerNumber: $centerNumber\r\n    ) {\r\n      id\r\n      centerName\r\n      centerNumber\r\n      centerCode\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateTownMutation = gql`\r\n  mutation updateTownMutation($id: ID!, $townName: String, $townCode: String) {\r\n    updateTown(id: $id, townName: $townName, townCode: $townCode) {\r\n      townName\r\n      townCode\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateExamMutation = gql`\r\n  mutation updateExamMutation($id: ID!, $examName: String, $examCode: String) {\r\n    updateExam(id: $id, examName: $examName, examCode: $examCode) {\r\n      examName\r\n      examCode\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateScoreMutation = gql`\r\n  mutation updateScoreMutation(\r\n    $subjectSpecialty: SubjectSpecialtyWhereUniqueInput!\r\n    $subjectAve: Float!\r\n    $candExamSecretCode: String!\r\n  ) {\r\n    updateScore(\r\n      subjectSpecialty: $subjectSpecialty\r\n      subjectAve: $subjectAve\r\n      candExamSecretCode: $candExamSecretCode\r\n    ) {\r\n      subjectAve\r\n      coeff\r\n      id\r\n      subjectSpecialty {\r\n        id\r\n        subjectCode\r\n        subjectName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst enterMarksMutation = gql`\r\n  mutation enterMarksMutation(\r\n    $subjectSpecialty: SubjectSpecialtyWhereUniqueInput!\r\n    $subjectAve: Float!\r\n    $subjectName: String!\r\n    $candExamSecretCode: String!\r\n  ) {\r\n    enterMarks(\r\n      subjectSpecialty: $subjectSpecialty\r\n      subjectAve: $subjectAve\r\n      subjectName: $subjectName\r\n      candExamSecretCode: $candExamSecretCode\r\n    ) {\r\n      subjectAve\r\n      coeff\r\n      subjectName\r\n      id\r\n      subjectSpecialty {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// const createUserMutation = gql`\r\n//   mutation createUserMutation(\r\n//     $email: String!\r\n//     $name: String!\r\n//     $password: String!\r\n//     ) {\r\n//     createUser(\r\n//                email: $email!\r\n//                name: $name!\r\n//                password: $password!\r\n//                ) {\r\n//       id\r\n//       name\r\n//       email\r\n//       password\r\n//     }\r\n//   }\r\n// `\r\n\r\nconst updateCandidateMutation = gql`\r\n  mutation updateCandidateMutation(\r\n    $id: ID!\r\n    $cand1stName: String\r\n    $cand2ndName: String\r\n    $cand3rdName: String\r\n    $momName: String\r\n    $dadName: String\r\n    $email: String\r\n    $image: String\r\n    $phoneNumb: Int\r\n    $placeOfBirth: String\r\n    $dateOfBirth: DateTime\r\n    $birthCertNumber: String\r\n    $gender: String\r\n  ) {\r\n    updateCandidate(\r\n      id: $id\r\n      cand1stName: $cand1stName\r\n      cand2ndName: $cand2ndName\r\n      cand3rdName: $cand3rdName\r\n      momName: $momName\r\n      dadName: $dadName\r\n      email: $email\r\n      image: $image\r\n      phoneNumb: $phoneNumb\r\n      placeOfBirth: $placeOfBirth\r\n      dateOfBirth: $dateOfBirth\r\n      birthCertNumber: $birthCertNumber\r\n      gender: $gender\r\n    ) {\r\n      id\r\n      cand1stName\r\n      cand2ndName\r\n      cand3rdName\r\n      momName\r\n      dadName\r\n      email\r\n      image\r\n      phoneNumb\r\n      placeOfBirth\r\n      dateOfBirth\r\n      birthCertNumber\r\n      gender\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateExaminerMutation = gql`\r\n  mutation updateExaminerMutation(\r\n    $id: ID!\r\n    $examiner1stName: String\r\n    $examiner2ndName: String\r\n    $examinerOtherNames: String\r\n    $examinerCNI: String\r\n    $examinerPhone: Int\r\n    $examinerEmail: String\r\n    $examinerImage: String\r\n    $examinerMatricule: String\r\n    $examinerCode: String\r\n    $gender: String\r\n  ) {\r\n    updateExaminer(\r\n      id: $id\r\n      examiner1stName: $examiner1stName\r\n      examiner2ndName: $examiner2ndName\r\n      examinerOtherNames: $examinerOtherNames\r\n      examinerCNI: $examinerCNI\r\n      examinerPhone: $examinerPhone\r\n      examinerEmail: $examinerEmail\r\n      examinerMatricule: $examinerMatricule\r\n      examinerCode: $examinerCode\r\n      examinerImage: $examinerImage\r\n      gender: $gender\r\n    ) {\r\n      id\r\n      examiner1stName\r\n      examiner2ndName\r\n      examinerOtherNames\r\n      examinerCNI\r\n      examinerPhone\r\n      examinerEmail\r\n      examinerMatricule\r\n      examinerCode\r\n      examinerImage\r\n      gender\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateSignUpMutation = gql`\r\n  mutation updateSignUpMutation(\r\n    $email: String!\r\n    $name: String!\r\n    $password: String!\r\n  ) {\r\n    updateUser(email: $email, name: $name, password: $password) {\r\n      id\r\n      email\r\n      name\r\n      password\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateItemMutation = async (e, updateMutation) => {\r\n  e.preventDefault();\r\n  console.log(\"Updating Region!!\");\r\n  const res = await updateMutation({\r\n    variables: {\r\n      id: this.props.id,\r\n      ...this.state,\r\n    },\r\n  });\r\n  console.log(\"Region Updated!!\");\r\n};\r\n\r\n////**************Update mutations */\r\n\r\n/////*****************Delete Mutations */\r\n\r\nconst deleteRegionMutation = gql`\r\n  mutation deleteRegionMutation($id: ID!) {\r\n    deleteRegion(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst deleteCenterMutation = gql`\r\n  mutation deleteCenterMutation($id: ID!) {\r\n    deleteCenter(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  createCandidateMutation,\r\n  createNewSubjectMutation,\r\n  createTownMutation,\r\n  createCenterExamSessionExaminerMutation,\r\n  createDivisionMutation,\r\n  createRegistrationMutation,\r\n  createCenterMutation,\r\n  createEducationTypeMutation,\r\n  createSpecialtyMutation,\r\n  createSubDivisionMutation,\r\n  createNewSessionMutation,\r\n  createNewRankMutation,\r\n  createNewReportMutation,\r\n  createNewRegionMutation,\r\n  createExamMutation,\r\n  registerSubjectSpecialtyMutation,\r\n  registerNewSubjectSpecialtyMutation,\r\n  updateCenterMutation,\r\n  updateTownMutation,\r\n  updateSessionMutation,\r\n  updateRegionMutation,\r\n  updateExamMutation,\r\n  updateSubDivisionMutation,\r\n  updateCandidateMutation,\r\n  updateScoreMutation,\r\n  updateDivisionMutation,\r\n  updateItemMutation,\r\n  createExaminerMutation,\r\n  createPhaseMutation,\r\n  createCenterExamSessionSpecialtyMutation,\r\n  updateSpecialtyMutation,\r\n  updateRankMutation,\r\n  createPhaseRankMutation,\r\n  createNewCountryMutation,\r\n  createMultipleCandidatesMutation,\r\n  updateSubjectMutation,\r\n  updateExaminerMutation,\r\n  createCenterExamSessionMutation,\r\n  updateEducationTypeMutation,\r\n  createAttendanceMutation,\r\n  signInCandidate,\r\n  loginUserMutation,\r\n  updateSignUpMutation,\r\n  signupUserMutation,\r\n  deleteRegionMutation,\r\n  deleteCenterMutation,\r\n  signoutMutation,\r\n  enterMarksMutation,\r\n  deleteReportMutation,\r\n  requestResetMutation,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst TableStyledPage = styled.div`\r\n  padding: 0 1rem;\r\n  margin: 0 auto;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-auto-flow: row;\r\n  text-align: center;\r\n  width: 100vw;\r\n  min-width: 30rem;\r\n\r\n  background-color: ${(props) => props.theme.pureWhite};\r\n  h4 {\r\n    margin: 0 auto;\r\n    margin-bottom: 1rem;\r\n    padding: 0.5rem 1rem;\r\n    text-align: center;\r\n    font-size: 1.6rem;\r\n    font-weight: normal;\r\n    box-shadow: ${(props) => props.theme.formBS};\r\n    background: ${(props) => props.theme.pureWhite};\r\n    width: 100%;\r\n    border-radius: 0.5rem;\r\n    color: ${(props) => props.theme.blues[2]};\r\n  }\r\n  .Form {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n  form {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledPage = styled.div`\r\n  padding: 0 1rem;\r\n  margin: 0 auto;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-auto-flow: row;\r\n  text-align: center;\r\n  width: 70vw;\r\n  min-width: 30rem;\r\n\r\n  background-color: ${(props) => props.theme.pureWhite};\r\n  h4 {\r\n    margin: 0 auto;\r\n    margin-bottom: 1rem;\r\n    padding: 0.5rem 1rem;\r\n    text-align: center;\r\n    font-size: 1.6rem;\r\n    font-weight: normal;\r\n    box-shadow: ${(props) => props.theme.formBS};\r\n    background: ${(props) => props.theme.pureWhite};\r\n    width: 100%;\r\n    border-radius: 0.5rem;\r\n    color: ${(props) => props.theme.blues[2]};\r\n  }\r\n  .Form {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n  form {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst MiniStyledPage = styled.div`\r\n  display: grid;\r\n  padding: 0 1rem;\r\n  margin: 0 auto;\r\n  grid-template-columns: 1fr;\r\n  grid-auto-flow: row;\r\n\r\n  text-align: center;\r\n  width: 50vw;\r\n  min-width: 30rem;\r\n  background-color: ${(props) => props.theme.pureWhite};\r\n\r\n  h4 {\r\n    margin: 0 auto;\r\n    margin-bottom: 1rem;\r\n    padding: 0.5rem 1rem;\r\n    text-align: center;\r\n    font-size: 1.6rem;\r\n    font-weight: normal;\r\n    box-shadow: ${(props) => props.theme.formBS};\r\n    background: ${(props) => props.theme.pureWhite};\r\n    width: 100%;\r\n    border-radius: 0.5rem;\r\n    color: ${(props) => props.theme.blues[2]};\r\n  }\r\n`;\r\n\r\nconst MinimStyledPage = styled.div`\r\n  display: grid;\r\n  margin: 0 auto;\r\n\r\n  grid-template-columns: 1fr;\r\n  grid-auto-flow: row;\r\n  text-align: center;\r\n  width: 30vw;\r\n  min-width: 25rem;\r\n  z-index: -10;\r\n  background-color: ${(props) => props.theme.pureWhite};\r\n  h4 {\r\n    margin: 0 auto;\r\n    margin-bottom: 1rem;\r\n    padding: 0.5rem 1rem;\r\n    text-align: center;\r\n    font-size: 1.6rem;\r\n    font-weight: normal;\r\n    box-shadow: ${(props) => props.theme.formBS};\r\n    background: ${(props) => props.theme.pureWhite};\r\n    width: 100%;\r\n    border-radius: 0.5rem;\r\n    color: ${(props) => props.theme.blues[2]};\r\n  }\r\n  .Form {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n  form {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst BigStyledPage = styled.div`\r\n  display: grid;\r\n  padding: 0 1rem;\r\n  margin: 0 auto;\r\n\r\n  grid-template-columns: 1fr;\r\n  grid-auto-flow: row;\r\n  text-align: center;\r\n  width: 60vw;\r\n  min-width: 30rem;\r\n\r\n  background-color: ${(props) => props.theme.pureWhite};\r\n  h4 {\r\n    margin: 0 auto;\r\n    margin-bottom: 1rem;\r\n    padding: 0.5rem 1rem;\r\n    text-align: center;\r\n    font-size: 1.6rem;\r\n    font-weight: normal;\r\n    box-shadow: ${(props) => props.theme.formBS};\r\n    background: ${(props) => props.theme.pureWhite};\r\n    width: 100%;\r\n    border-radius: 0.5rem;\r\n    color: ${(props) => props.theme.blues[2]};\r\n  }\r\n  .Form {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n  fieldset {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst BiggestStyledPage = styled.div`\r\n  display: grid;\r\n  padding: 0 1rem;\r\n  margin: 0 auto;\r\n\r\n  grid-template-columns: 1fr;\r\n  text-align: center;\r\n  width: 90vw;\r\n  min-width: 30rem;\r\n/* background: ${(props) => props.theme.specialBlue}; */\r\n  background-color: ${(props) => props.theme.pureWhite};\r\n  h4 {\r\n    margin: 0 auto;\r\n    margin-bottom: 1rem;\r\n    padding: 0.5rem 1rem;\r\n    text-align: center;\r\n    font-size: 1.6rem;\r\n    font-weight: normal;\r\n    box-shadow: ${(props) => props.theme.formBS};\r\n    background: ${(props) => props.theme.pureWhite};\r\n    width: 100%;\r\n    border-radius: 0.5rem;\r\n    color: ${(props) => props.theme.blues[2]};\r\n  }\r\n  .Form {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n  fieldset {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst MediumStyledPage = styled.div`\r\n  display: grid;\r\n  padding: 0 1rem;\r\n  margin: 0 auto;\r\n\r\n  grid-template-columns: 1fr;\r\n  text-align: center;\r\n  width: 35vw;\r\n  min-width: 30rem;\r\n/* background: ${(props) => props.theme.specialBlue}; */\r\n  background-color: ${(props) => props.theme.pureWhite};\r\n  h4 {\r\n    margin: 0 auto;\r\n    margin-bottom: 1rem;\r\n    padding: 0.5rem 1rem;\r\n    text-align: center;\r\n    font-size: 1.6rem;\r\n    font-weight: normal;\r\n    box-shadow: ${(props) => props.theme.formBS};\r\n    background: ${(props) => props.theme.pureWhite};\r\n    width: 100%;\r\n    border-radius: 0.5rem;\r\n    color: ${(props) => props.theme.blues[2]};\r\n  }\r\n  .Form {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n  fieldset {\r\n    justify-items: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport {\r\n  MediumStyledPage,\r\n  TableStyledPage,\r\n  MinimStyledPage,\r\n  MiniStyledPage,\r\n  StyledPage,\r\n  BigStyledPage,\r\n  BiggestStyledPage,\r\n};\r\n","import React from \"react\";\r\nimport { MinimStyledPage } from \"../styles/StyledPage\";\r\nimport Error from \"../ErrorMessage.js\";\r\nimport { Formik, Form } from \"formik\";\r\nimport Link from \"next/link\";\r\nimport {\r\n  SygexInput,\r\n  StyledForm,\r\n  ButtonStyled,\r\n  StyledButton,\r\n} from \"../utils/FormInputs\";\r\nimport styled from \"styled-components\";\r\nimport * as Yup from \"yup\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { loginUserMutation } from \"../queries&Mutations&Functions/Mutations\";\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 1rem;\r\n`;\r\nconst AllControls = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst LoginStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  justify-items: left;\r\n  a {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  h9 {\r\n    display: block;\r\n    padding-left: 0;\r\n    padding-right: 2rem;\r\n  }\r\n`;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .min(3, \"Email 3 characters au moins\")\r\n    .required(\"Email Obligatoire\")\r\n    .email(\"Email invalide\"),\r\n\r\n  password: Yup.string()\r\n    .required(\"Mot de passe Obligatoire\")\r\n    .min(3, \"Mot de passe 3 characters au moins\"),\r\n});\r\n\r\nconst Login = () => {\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const [login, { loading, error }] = useMutation(loginUserMutation, {\r\n    refetchQueries: [\"currentUserQuery\"],\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      method=\"POST\"\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n        const res = await login({\r\n          variables: { ...values },\r\n        });\r\n        setTimeout(() => {\r\n          console.log(JSON.stringify(values, null, 2));\r\n          console.log(res);\r\n          resetForm(true);\r\n          setSubmitting(false);\r\n        }, 200);\r\n      }}\r\n    >\r\n      {({ isSubmitting }) => {\r\n        return (\r\n          <MinimStyledPage>\r\n            <h4>Acceder a son compte</h4>\r\n            <Error error={error} />\r\n            <StyledForm\r\n              disabled={isSubmitting || loading}\r\n              aria-busy={isSubmitting || loading}\r\n            >\r\n              <Form>\r\n                <AllControls>\r\n                  <InputGroup>\r\n                    <SygexInput\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      label=\"Email\"\r\n                      disabled={isSubmitting || loading}\r\n                    />\r\n                    <SygexInput\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      label=\"Mot de passe\"\r\n                      disabled={isSubmitting || loading}\r\n                    />\r\n                  </InputGroup>\r\n                  <LoginStyled>\r\n                    <ul>\r\n                      <h6>Pas encore de compte?</h6>\r\n                      <Link href=\"/creates/signup\">\r\n                        <a>Cr√©ez votre compte</a>\r\n                      </Link>\r\n                    </ul>\r\n                  </LoginStyled>\r\n                  <ButtonStyled>\r\n                    <StyledButton\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting || loading}\r\n                    >\r\n                      Valid{isSubmitting ? \"ation en cours\" : \"er\"}\r\n                    </StyledButton>\r\n                  </ButtonStyled>\r\n                </AllControls>\r\n              </Form>\r\n            </StyledForm>\r\n          </MinimStyledPage>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default Login;\r\n","import React, { Fragment } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useField, Field } from \"formik\";\r\n\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst loading = keyframes`\r\n  from {\r\n    background-position: 0 0;\r\n    /* rotate: 0; */\r\n  }\r\n\r\n  to {\r\n    background-position: 100% 100%;\r\n    /* rotate: 360deg; */\r\n  }\r\n`;\r\n\r\nconst customStyle = {\r\n  control: (provided) => ({\r\n    ...provided,\r\n    fontFamily: \"Roboto Slab\",\r\n    border: \"0 solid black\",\r\n    borderBottom: \"0.9px solid #0780b7\",\r\n    fontSize: \"1.6rem\",\r\n    paddingTop: \"1rem\",\r\n    outline: \"none\",\r\n    backgroundColor: \"white\",\r\n    color: \"#000\",\r\n    borderRadius: \"0\",\r\n    boxShadow: \"none\",\r\n    alignItems: \"center\",\r\n    \"&:hover\": {\r\n      borderBottom: \" 0.2rem solid #d4351c\",\r\n      borderRadius: \"0\",\r\n    }, // border style on hover\r\n    \"&:focus\": {\r\n      borderBottom: \" 0.2rem solid #d4351c\",\r\n      borderRadius: \"0\",\r\n    }, // border style on hover\r\n  }),\r\n  option: (provided) => ({\r\n    ...provided,\r\n    textAlign: \"left\",\r\n    fontSize: \"1.5rem\",\r\n  }),\r\n};\r\n\r\nconst StyledInput = styled.input`\r\n  padding-top: 1rem;\r\n  /* display:block; */\r\n  margin-top: 0.4rem;\r\n  font-size: 1.5rem;\r\n  border-style: none;\r\n  width: 100%;\r\n  outline: none;\r\n  border-bottom: 0.09rem solid ${(props) => props.theme.blues[2]};\r\n  z-index: 10;\r\n  font-family: \"Roboto Slab\";\r\n\r\n  &:valid + label {\r\n    top: -0.25rem;\r\n    font-size: 1.1rem;\r\n    color: ${(props) => props.theme.britishBlue};\r\n  }\r\n  &:focus,\r\n  &active {\r\n    outline: none;\r\n    border-bottom: 0.2rem solid ${(props) => props.theme.britishRed};\r\n  }\r\n  &:focus + label {\r\n    top: -0.25rem;\r\n    font-size: 1.1rem;\r\n    color: #aaa;\r\n  }\r\n`;\r\n\r\nconst InputGroup = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst AllRadios = styled.div`\r\n  position: relative;\r\n  margin: 0.5rem;\r\n  label {\r\n    border: 0;\r\n    width: 2rem;\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  font-size: 1.5rem;\r\n  border-style: none;\r\n  position: absolute;\r\n  left: 1rem;\r\n  top: 1.5rem;\r\n  color: ${(props) => props.theme.greys[2]};\r\n  pointer-events: none;\r\n  transition: all 1s ease-out;\r\n  font-family: \"Roboto Slab\";\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst StyledSelect = styled.select`\r\n  margin-top: 1rem;\r\n  font-size: 1.2rem;\r\n  border-style: none;\r\n  border-bottom: 0.09rem solid ${(props) => props.theme.blues[2]};\r\n  option {\r\n    background: white;\r\n    font-weight: 400;\r\n    display: flex;\r\n    white-space: pre;\r\n    min-height: 20px;\r\n    padding: 0px 2px 1px;\r\n    background: ${(props) => props.theme.blues[0]};\r\n    border-radius: 0.5rem;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${(props) => props.theme.britishRed};\r\n  }\r\n`;\r\n\r\nconst StyledErrorMessage = styled.div`\r\n  padding-top: 0.2rem;\r\n  font-size: 1.2rem;\r\n  color: ${(props) => props.theme.britishRed};\r\n  /* padding-left: 0.5rem; */\r\n`;\r\n\r\nconst RadioStyled = styled.div`\r\n  display: inline-block;\r\n  input,\r\n  label :hover {\r\n    cursor: pointer;\r\n    background: ${(props) => props.theme.lightBlues[2]};\r\n  }\r\n\r\n  input[type=\"radio\"] {\r\n    margin-top: 0.5rem;\r\n    border: 0;\r\n    width: 2rem;\r\n    height: 2rem;\r\n    margin: 0 0.7rem;\r\n\r\n    background: ${(props) => props.theme.lightBlues[2]};\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  color: ${(props) => props.theme.blues[2]};\r\n  border: 0;\r\n  border-radius: 0.5rem;\r\n  font-size: 2.5rem;\r\n  font-weight: 300;\r\n  line-height: 1.5rem;\r\n  box-shadow: ${(props) => props.theme.bs2};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ButtonStyled = styled.div`\r\n  padding-bottom: 0.5rem;\r\n  padding-top: 1rem;\r\n  button {\r\n    border-radius: 0.6rem;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    box-shadow: ${(props) => props.theme.formBS};\r\n    border: 0.05rem solid ${(props) => props.theme.blues[2]};\r\n    color: ${(props) => props.theme.blues[2]};\r\n    background: ${(props) => props.theme.pureWhite};\r\n    cursor: pointer;\r\n    padding: 0.8rem;\r\n    outline: none;\r\n    &:hover {\r\n      color: ${(props) => props.theme.blues[2]};\r\n      background-color: ${(props) => props.theme.pureWhite};\r\n    }\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst StyledForm = styled.div`\r\n  margin: 0 3rem;\r\n  padding: 0.6rem;\r\n  font-size: 1.7rem;\r\n  border-radius: 0.9rem;\r\n  border: 0.001rem solid ${(props) => props.theme.blues[2]};\r\n  border-top: 1rem solid ${(props) => props.theme.blues[2]};\r\n  border-bottom: 1rem solid ${(props) => props.theme.tableRed};\r\n  box-shadow: ${(props) => props.theme.formBS};\r\n\r\n  min-width: 20rem;\r\n\r\n  &[disabled] {\r\n    opacity: 0.3;\r\n  }\r\n  &::before {\r\n    height: 0.3rem;\r\n    content: \"\";\r\n    display: block;\r\n    background-image: linear-gradient(\r\n      to right,\r\n      #0780b7 0%,\r\n      #e2b04a 20%,\r\n      #0780b7 100%\r\n    );\r\n    /* background-image: linear-gradient(to right, #ff3019 0%, #e2b04a 50%, #ff3019 100%); */\r\n  }\r\n  &[aria-busy=\"true\"]::before {\r\n    background-size: 50% auto;\r\n    animation: ${loading} 0.5s linear infinite;\r\n  }\r\n`;\r\n\r\nconst SygexInput = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <InputGroup>\r\n      <StyledInput className=\"text-input\" {...field} {...props} required />\r\n      <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\r\n      {meta.touched && meta.error ? (\r\n        <StyledErrorMessage>{meta.error}</StyledErrorMessage>\r\n      ) : null}\r\n    </InputGroup>\r\n  );\r\n};\r\n\r\nconst SygefexSelect = ({ theme, ...props }) => {\r\n  const customTheme = (theme) => ({\r\n    ...theme,\r\n    colors: {\r\n      ...theme.colors,\r\n      primary25: \"#0780b7\",\r\n      primary: \"#d17f05\",\r\n    },\r\n  });\r\n  return (\r\n    <Select theme={customTheme} styles={customStyle} {...props} isSearchable />\r\n  );\r\n};\r\n\r\nconst SygefexRadio = ({ label, options, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <AllRadios>\r\n      <label>{label}</label>\r\n      <Field label={label} {...field} {...props}>\r\n        {({ field }) => {\r\n          return options.map((item) => (\r\n            <RadioStyled>\r\n              <input\r\n                {...field}\r\n                type=\"radio\"\r\n                id={item.value}\r\n                value={item.value}\r\n                checked={field.value === item.value}\r\n              />\r\n              <label htmlFor={props.id || item.value}>{item.key}</label>\r\n            </RadioStyled>\r\n          ));\r\n        }}\r\n      </Field>\r\n      {meta.touched && meta.error ? (\r\n        <StyledErrorMessage>{meta.error}</StyledErrorMessage>\r\n      ) : null}\r\n    </AllRadios>\r\n  );\r\n};\r\n\r\nexport {\r\n  SygefexSelect,\r\n  SygefexRadio,\r\n  StyledLabel,\r\n  StyledButton,\r\n  ButtonStyled,\r\n  SygexInput,\r\n  StyledForm,\r\n};\r\n\r\n// <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\r\n","module.exports = require(\"@apollo/react-hooks\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"formik\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"next/link\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-select\");","module.exports = require(\"styled-components\");","module.exports = require(\"yup\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAiBA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","sourceRoot":""}